<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="1" total="14" passed="12" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-07-10T19:11:08 IST" name="TestNG" finished-at="2025-07-10T19:12:05 IST" duration-ms="57039">
    <groups>
      <group name="Regression">
        <method signature="LoginTest.verifyTheUserIsAbleToLoginUsingValidCredentials()[pri:0, instance:testscript.LoginTest@7cc0cdad]" name="verifyTheUserIsAbleToLoginUsingValidCredentials" class="testscript.LoginTest"/>
      </group> <!-- Regression -->
    </groups>
    <test started-at="2025-07-10T19:11:08 IST" name="Test" finished-at="2025-07-10T19:12:05 IST" duration-ms="57039">
      <class name="testscript.ManageFooterTest">
        <test-method is-config="true" signature="browserInitialisation(java.lang.String)[pri:0, instance:testscript.ManageFooterTest@4afcd809]" started-at="2025-07-10T19:11:59 IST" name="browserInitialisation" finished-at="2025-07-10T19:12:01 IST" duration-ms="1511" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialisation -->
        <test-method signature="verifyTheUserIsAbleToUpdateManageFooterTextInformation()[pri:0, instance:testscript.ManageFooterTest@4afcd809]" started-at="2025-07-10T19:12:01 IST" name="verifyTheUserIsAbleToUpdateManageFooterTextInformation" description="To verify that an authorized user is able to successfully update the &#039;Manage Footer Text&#039; information" finished-at="2025-07-10T19:12:02 IST" duration-ms="1495" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheUserIsAbleToUpdateManageFooterTextInformation -->
        <test-method is-config="true" signature="driverQuit(org.testng.ITestResult)[pri:0, instance:testscript.ManageFooterTest@4afcd809]" started-at="2025-07-10T19:12:02 IST" name="driverQuit" finished-at="2025-07-10T19:12:02 IST" duration-ms="156" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheUserIsAbleToUpdateManageFooterTextInformation status=SUCCESS method=ManageFooterTest.verifyTheUserIsAbleToUpdateManageFooterTextInformation()[pri:0, instance:testscript.ManageFooterTest@4afcd809] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverQuit -->
      </class> <!-- testscript.ManageFooterTest -->
      <class name="testscript.ManageContactTest">
        <test-method is-config="true" signature="browserInitialisation(java.lang.String)[pri:0, instance:testscript.ManageContactTest@3754a4bf]" started-at="2025-07-10T19:11:53 IST" name="browserInitialisation" finished-at="2025-07-10T19:11:54 IST" duration-ms="1524" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialisation -->
        <test-method signature="verifyTheUserIsAbleToDisplayContactUsInformations()[pri:0, instance:testscript.ManageContactTest@3754a4bf]" started-at="2025-07-10T19:11:54 IST" name="verifyTheUserIsAbleToDisplayContactUsInformations" description="To verify that an authorized user is able to successfully display the &#039;Contact Us&#039; information" finished-at="2025-07-10T19:11:56 IST" duration-ms="1530" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheUserIsAbleToDisplayContactUsInformations -->
        <test-method is-config="true" signature="driverQuit(org.testng.ITestResult)[pri:0, instance:testscript.ManageContactTest@3754a4bf]" started-at="2025-07-10T19:11:56 IST" name="driverQuit" finished-at="2025-07-10T19:11:56 IST" duration-ms="147" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheUserIsAbleToDisplayContactUsInformations status=SUCCESS method=ManageContactTest.verifyTheUserIsAbleToDisplayContactUsInformations()[pri:0, instance:testscript.ManageContactTest@3754a4bf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverQuit -->
        <test-method is-config="true" signature="browserInitialisation(java.lang.String)[pri:0, instance:testscript.ManageContactTest@3754a4bf]" started-at="2025-07-10T19:11:56 IST" name="browserInitialisation" finished-at="2025-07-10T19:11:57 IST" duration-ms="1514" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialisation -->
        <test-method signature="verifyTheUserIsAbleToUpdateContactUsInformations()[pri:0, instance:testscript.ManageContactTest@3754a4bf]" started-at="2025-07-10T19:11:57 IST" name="verifyTheUserIsAbleToUpdateContactUsInformations" description="To verify that an authorized user is able to successfully update the &#039;Contact Us&#039; information" finished-at="2025-07-10T19:11:59 IST" duration-ms="1818" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheUserIsAbleToUpdateContactUsInformations -->
        <test-method is-config="true" signature="driverQuit(org.testng.ITestResult)[pri:0, instance:testscript.ManageContactTest@3754a4bf]" started-at="2025-07-10T19:11:59 IST" name="driverQuit" finished-at="2025-07-10T19:11:59 IST" duration-ms="176" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheUserIsAbleToUpdateContactUsInformations status=SUCCESS method=ManageContactTest.verifyTheUserIsAbleToUpdateContactUsInformations()[pri:0, instance:testscript.ManageContactTest@3754a4bf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverQuit -->
      </class> <!-- testscript.ManageContactTest -->
      <class name="testscript.HomePageTest">
        <test-method is-config="true" signature="browserInitialisation(java.lang.String)[pri:0, instance:testscript.HomePageTest@175c2241]" started-at="2025-07-10T19:12:02 IST" name="browserInitialisation" finished-at="2025-07-10T19:12:04 IST" duration-ms="1509" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialisation -->
        <test-method signature="isUserIsAbleToLogOut()[pri:0, instance:testscript.HomePageTest@175c2241]" started-at="2025-07-10T19:12:04 IST" name="isUserIsAbleToLogOut" description="Verify user can log out and is redirected to the login page." finished-at="2025-07-10T19:12:05 IST" duration-ms="758" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isUserIsAbleToLogOut -->
        <test-method is-config="true" signature="driverQuit(org.testng.ITestResult)[pri:0, instance:testscript.HomePageTest@175c2241]" started-at="2025-07-10T19:12:05 IST" name="driverQuit" finished-at="2025-07-10T19:12:05 IST" duration-ms="178" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=isUserIsAbleToLogOut status=SUCCESS method=HomePageTest.isUserIsAbleToLogOut()[pri:0, instance:testscript.HomePageTest@175c2241] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverQuit -->
      </class> <!-- testscript.HomePageTest -->
      <class name="testscript.AdminUsersTest">
        <test-method is-config="true" signature="browserInitialisation(java.lang.String)[pri:0, instance:testscript.AdminUsersTest@28701274]" started-at="2025-07-10T19:11:29 IST" name="browserInitialisation" finished-at="2025-07-10T19:11:32 IST" duration-ms="3173" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialisation -->
        <test-method retried="true" signature="verifyTheUserIsAbleToCreateTheAdminUsers()[pri:0, instance:testscript.AdminUsersTest@28701274]" started-at="2025-07-10T19:11:32 IST" name="verifyTheUserIsAbleToCreateTheAdminUsers" description="Verify that an authorized user can create a new Admin account via user management." finished-at="2025-07-10T19:11:46 IST" duration-ms="13485" status="SKIP">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//div[@class='alert alert-success alert-dismissible']"}
  (Session info: chrome=137.0.7151.120)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.29.0', revision: '5fc1ec94cb'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.12'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [b617d61ffcee87d6f98540bb8a30a7f5, findElement {using=xpath, value=//div[@class='alert alert-success alert-dismissible']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 137.0.7151.120, chrome: {chromedriverVersion: 137.0.7151.119 (e0ac9d12dff..., userDataDir: C:\Users\ranji\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:53665}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:53665/devtoo..., se:cdpVersion: 137.0.7151.120, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: b617d61ffcee87d6f98540bb8a30a7f5]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[@class='alert alert-success alert-dismissible']"}
  (Session info: chrome=137.0.7151.120)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.29.0', revision: '5fc1ec94cb'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.12'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [b617d61ffcee87d6f98540bb8a30a7f5, findElement {using=xpath, value=//div[@class='alert alert-success alert-dismissible']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 137.0.7151.120, chrome: {chromedriverVersion: 137.0.7151.119 (e0ac9d12dff..., userDataDir: C:\Users\ranji\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:53665}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:53665/devtoo..., se:cdpVersion: 137.0.7151.120, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: b617d61ffcee87d6f98540bb8a30a7f5
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy14.isDisplayed(Unknown Source)
at pages.AdminUsersPage.isDisplayAlertMessage(AdminUsersPage.java:75)
at testscript.AdminUsersTest.verifyTheUserIsAbleToCreateTheAdminUsers(AdminUsersTest.java:61)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheUserIsAbleToCreateTheAdminUsers -->
        <test-method is-config="true" signature="driverQuit(org.testng.ITestResult)[pri:0, instance:testscript.AdminUsersTest@28701274]" started-at="2025-07-10T19:11:46 IST" name="driverQuit" finished-at="2025-07-10T19:11:46 IST" duration-ms="188" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheUserIsAbleToCreateTheAdminUsers status=SKIP method=AdminUsersTest.verifyTheUserIsAbleToCreateTheAdminUsers()[pri:0, instance:testscript.AdminUsersTest@28701274] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverQuit -->
        <test-method is-config="true" signature="browserInitialisation(java.lang.String)[pri:0, instance:testscript.AdminUsersTest@28701274]" started-at="2025-07-10T19:11:46 IST" name="browserInitialisation" finished-at="2025-07-10T19:11:48 IST" duration-ms="1625" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialisation -->
        <test-method signature="verifyTheUserIsAbleToCreateTheAdminUsers()[pri:0, instance:testscript.AdminUsersTest@28701274]" started-at="2025-07-10T19:11:48 IST" name="verifyTheUserIsAbleToCreateTheAdminUsers" description="Verify that an authorized user can create a new Admin account via user management." finished-at="2025-07-10T19:11:49 IST" duration-ms="1527" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheUserIsAbleToCreateTheAdminUsers -->
        <test-method is-config="true" signature="driverQuit(org.testng.ITestResult)[pri:0, instance:testscript.AdminUsersTest@28701274]" started-at="2025-07-10T19:11:49 IST" name="driverQuit" finished-at="2025-07-10T19:11:49 IST" duration-ms="150" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheUserIsAbleToCreateTheAdminUsers status=SUCCESS method=AdminUsersTest.verifyTheUserIsAbleToCreateTheAdminUsers()[pri:0, instance:testscript.AdminUsersTest@28701274] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverQuit -->
        <test-method is-config="true" signature="browserInitialisation(java.lang.String)[pri:0, instance:testscript.AdminUsersTest@28701274]" started-at="2025-07-10T19:11:49 IST" name="browserInitialisation" finished-at="2025-07-10T19:11:51 IST" duration-ms="1683" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialisation -->
        <test-method signature="verifyTheUserIsAbleToUpdateTheAdminUsers()[pri:0, instance:testscript.AdminUsersTest@28701274]" started-at="2025-07-10T19:11:51 IST" name="verifyTheUserIsAbleToUpdateTheAdminUsers" description="Verify that an authorized user can update a new Admin account via user management." finished-at="2025-07-10T19:11:52 IST" duration-ms="1359" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheUserIsAbleToUpdateTheAdminUsers -->
        <test-method is-config="true" signature="driverQuit(org.testng.ITestResult)[pri:0, instance:testscript.AdminUsersTest@28701274]" started-at="2025-07-10T19:11:52 IST" name="driverQuit" finished-at="2025-07-10T19:11:53 IST" duration-ms="145" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheUserIsAbleToUpdateTheAdminUsers status=SUCCESS method=AdminUsersTest.verifyTheUserIsAbleToUpdateTheAdminUsers()[pri:0, instance:testscript.AdminUsersTest@28701274] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverQuit -->
      </class> <!-- testscript.AdminUsersTest -->
      <class name="testscript.LoginTest">
        <test-method is-config="true" signature="browserInitialisation(java.lang.String)[pri:0, instance:testscript.LoginTest@7cc0cdad]" started-at="2025-07-10T19:11:08 IST" name="browserInitialisation" finished-at="2025-07-10T19:11:11 IST" duration-ms="3092" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialisation -->
        <test-method signature="verifyTheUserIsAbleToLoginUsingInalidUsername_validPassword()[pri:0, instance:testscript.LoginTest@7cc0cdad]" started-at="2025-07-10T19:11:11 IST" name="verifyTheUserIsAbleToLoginUsingInalidUsername_validPassword" description="To verify that a user can successfully log in to the application when entering invalid username and valid password" finished-at="2025-07-10T19:11:12 IST" duration-ms="1120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheUserIsAbleToLoginUsingInalidUsername_validPassword -->
        <test-method is-config="true" signature="driverQuit(org.testng.ITestResult)[pri:0, instance:testscript.LoginTest@7cc0cdad]" started-at="2025-07-10T19:11:12 IST" name="driverQuit" finished-at="2025-07-10T19:11:12 IST" duration-ms="222" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheUserIsAbleToLoginUsingInalidUsername_validPassword status=SUCCESS method=LoginTest.verifyTheUserIsAbleToLoginUsingInalidUsername_validPassword()[pri:0, instance:testscript.LoginTest@7cc0cdad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverQuit -->
        <test-method is-config="true" signature="browserInitialisation(java.lang.String)[pri:0, instance:testscript.LoginTest@7cc0cdad]" started-at="2025-07-10T19:11:12 IST" name="browserInitialisation" finished-at="2025-07-10T19:11:15 IST" duration-ms="2448" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialisation -->
        <test-method signature="verifyTheUserIsAbleToLoginUsingInvalidUsername_InvalidPassword(java.lang.String,java.lang.String)[pri:0, instance:testscript.LoginTest@7cc0cdad]" started-at="2025-07-10T19:11:15 IST" name="verifyTheUserIsAbleToLoginUsingInvalidUsername_InvalidPassword" description="To verify that a user can successfully log in to the application when entering invalid username and invalid password" data-provider="LoginDataProvider" finished-at="2025-07-10T19:11:15 IST" duration-ms="482" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[wrong]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[mist]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheUserIsAbleToLoginUsingInvalidUsername_InvalidPassword -->
        <test-method is-config="true" signature="driverQuit(org.testng.ITestResult)[pri:0, instance:testscript.LoginTest@7cc0cdad]" started-at="2025-07-10T19:11:15 IST" name="driverQuit" finished-at="2025-07-10T19:11:15 IST" duration-ms="220" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheUserIsAbleToLoginUsingInvalidUsername_InvalidPassword status=SUCCESS method=LoginTest.verifyTheUserIsAbleToLoginUsingInvalidUsername_InvalidPassword(java.lang.String,java.lang.String)[pri:0, instance:testscript.LoginTest@7cc0cdad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverQuit -->
        <test-method is-config="true" signature="browserInitialisation(java.lang.String)[pri:0, instance:testscript.LoginTest@7cc0cdad]" started-at="2025-07-10T19:11:15 IST" name="browserInitialisation" finished-at="2025-07-10T19:11:18 IST" duration-ms="2123" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialisation -->
        <test-method signature="verifyTheUserIsAbleToLoginUsingInvalidUsername_InvalidPassword(java.lang.String,java.lang.String)[pri:0, instance:testscript.LoginTest@7cc0cdad]" started-at="2025-07-10T19:11:18 IST" name="verifyTheUserIsAbleToLoginUsingInvalidUsername_InvalidPassword" description="To verify that a user can successfully log in to the application when entering invalid username and invalid password" data-provider="LoginDataProvider" finished-at="2025-07-10T19:11:18 IST" duration-ms="448" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[wro]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[wron]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheUserIsAbleToLoginUsingInvalidUsername_InvalidPassword -->
        <test-method is-config="true" signature="driverQuit(org.testng.ITestResult)[pri:0, instance:testscript.LoginTest@7cc0cdad]" started-at="2025-07-10T19:11:18 IST" name="driverQuit" finished-at="2025-07-10T19:11:18 IST" duration-ms="226" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheUserIsAbleToLoginUsingInvalidUsername_InvalidPassword status=SUCCESS method=LoginTest.verifyTheUserIsAbleToLoginUsingInvalidUsername_InvalidPassword(java.lang.String,java.lang.String)[pri:0, instance:testscript.LoginTest@7cc0cdad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverQuit -->
        <test-method is-config="true" signature="browserInitialisation(java.lang.String)[pri:0, instance:testscript.LoginTest@7cc0cdad]" started-at="2025-07-10T19:11:18 IST" name="browserInitialisation" finished-at="2025-07-10T19:11:21 IST" duration-ms="2271" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialisation -->
        <test-method signature="verifyTheUserIsAbleToLoginUsingInvalidUsername_InvalidPassword(java.lang.String,java.lang.String)[pri:0, instance:testscript.LoginTest@7cc0cdad]" started-at="2025-07-10T19:11:21 IST" name="verifyTheUserIsAbleToLoginUsingInvalidUsername_InvalidPassword" description="To verify that a user can successfully log in to the application when entering invalid username and invalid password" data-provider="LoginDataProvider" finished-at="2025-07-10T19:11:21 IST" duration-ms="522" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[wrng]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[wrng]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheUserIsAbleToLoginUsingInvalidUsername_InvalidPassword -->
        <test-method is-config="true" signature="driverQuit(org.testng.ITestResult)[pri:0, instance:testscript.LoginTest@7cc0cdad]" started-at="2025-07-10T19:11:21 IST" name="driverQuit" finished-at="2025-07-10T19:11:21 IST" duration-ms="246" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheUserIsAbleToLoginUsingInvalidUsername_InvalidPassword status=SUCCESS method=LoginTest.verifyTheUserIsAbleToLoginUsingInvalidUsername_InvalidPassword(java.lang.String,java.lang.String)[pri:0, instance:testscript.LoginTest@7cc0cdad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverQuit -->
        <test-method is-config="true" signature="browserInitialisation(java.lang.String)[pri:0, instance:testscript.LoginTest@7cc0cdad]" started-at="2025-07-10T19:11:21 IST" name="browserInitialisation" finished-at="2025-07-10T19:11:23 IST" duration-ms="1716" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialisation -->
        <test-method signature="verifyTheUserIsAbleToLoginUsingValidCredentials()[pri:0, instance:testscript.LoginTest@7cc0cdad]" started-at="2025-07-10T19:11:23 IST" name="verifyTheUserIsAbleToLoginUsingValidCredentials" description="To verify that a user can successfully log in to the application when entering valid login credentials" finished-at="2025-07-10T19:11:24 IST" duration-ms="1028" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheUserIsAbleToLoginUsingValidCredentials -->
        <test-method is-config="true" signature="driverQuit(org.testng.ITestResult)[pri:0, instance:testscript.LoginTest@7cc0cdad]" started-at="2025-07-10T19:11:24 IST" name="driverQuit" finished-at="2025-07-10T19:11:24 IST" duration-ms="252" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheUserIsAbleToLoginUsingValidCredentials status=SUCCESS method=LoginTest.verifyTheUserIsAbleToLoginUsingValidCredentials()[pri:0, instance:testscript.LoginTest@7cc0cdad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverQuit -->
        <test-method is-config="true" signature="browserInitialisation(java.lang.String)[pri:0, instance:testscript.LoginTest@7cc0cdad]" started-at="2025-07-10T19:11:24 IST" name="browserInitialisation" finished-at="2025-07-10T19:11:28 IST" duration-ms="4096" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialisation -->
        <test-method signature="verifyTheUserIsAbleToLoginUsingValidUsername_InvalidPassword()[pri:0, instance:testscript.LoginTest@7cc0cdad]" started-at="2025-07-10T19:11:28 IST" name="verifyTheUserIsAbleToLoginUsingValidUsername_InvalidPassword" description="To verify that a user can successfully log in to the application when entering valid username and invalid password" finished-at="2025-07-10T19:11:29 IST" duration-ms="507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheUserIsAbleToLoginUsingValidUsername_InvalidPassword -->
        <test-method is-config="true" signature="driverQuit(org.testng.ITestResult)[pri:0, instance:testscript.LoginTest@7cc0cdad]" started-at="2025-07-10T19:11:29 IST" name="driverQuit" finished-at="2025-07-10T19:11:29 IST" duration-ms="274" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheUserIsAbleToLoginUsingValidUsername_InvalidPassword status=SUCCESS method=LoginTest.verifyTheUserIsAbleToLoginUsingValidUsername_InvalidPassword()[pri:0, instance:testscript.LoginTest@7cc0cdad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driverQuit -->
      </class> <!-- testscript.LoginTest -->
    </test> <!-- Test -->
  </suite> <!-- TestNG -->
</testng-results>
